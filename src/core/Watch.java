package core;import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.util.Date;public class Watch extends FileAlterationListenerAdaptor {    public static String hexodg = "cd ~/hexo\nhexo clean && hexo d -g";    public static String hexos = "cd ~/hexo\nhexo clean && hexo s -g";    public static String ki = "lsof -i :4000|grep -v \"PID\"|grep \"node\"|awk '{print \"kill -9\",$2}'|sh";    private static boolean flag = false;    private long baseTime;    private long curTime;    public Watch() {        this.baseTime = new Date().getTime();        this.curTime = new Date().getTime();    }    @Override    public void onFileChange(File file) {        System.out.println("发现文件改变");        int bufferOffset = 0;        byte[] buf = new byte[1];        InputStream is = System.in;        long countTime = new Date().getTime();        long countTime2 = new Date().getTime();        while (countTime2 - countTime < 10000  && bufferOffset == 0) { //时间到，buf被写满，或者到读取到内容时            int readLength = 0;            try {                countTime2 = new Date().getTime();//                System.out.println(countTime2-countTime+"   test........");                readLength = Math.min(is.available(), buf.length - bufferOffset);                int result = is.read(buf,bufferOffset,readLength);                bufferOffset += result;            } catch (IOException e) {                e.printStackTrace();            }        }        if(bufferOffset != 0){            bufferOffset = 0;            try {                is.skip(100);            } catch (IOException e) {                e.printStackTrace();            }//            countTime = new Date().getTime();            System.out.println("##################################################################");            System.out.println("#                  Starting Hexo work immediately                #");            System.out.println("##################################################################");            String str = new Exec().start(hexodg).toString();            System.out.println(str);        }        else {            curTime = new Date().getTime();            long dif = (curTime - baseTime);            System.out.printf("%.0fs\n", dif * 1.0 / 1000);            if (dif >= MainCmd.DeployInterval) {                flag = false;                String str = new Exec().start(ki).toString();                System.out.println(str);                System.out.println("##################################################################");                System.out.println("#        File Change more than 10min....Starting Hexo work       #");                System.out.println("##################################################################");                baseTime = curTime;                String str1 = new Exec().start(hexodg).toString();                System.out.println(str1);            } else {                if (flag == false) {                    System.out.println("##################################################################");                    System.out.println("#          未达10min，开启预览，请进入http://localhost:4000      #");                    System.out.println("##################################################################");                    flag = true;                    new Exec().start(hexos);                }            }        }    }}